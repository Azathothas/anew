name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]'
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Add Rust targets
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          rustup target add x86_64-pc-windows-gnu
          rustup target add aarch64-pc-windows-gnu

      - name: Build for macOS
        run: cargo build --release --target x86_64-apple-darwin && cargo build --release --target aarch64-apple-darwin

      - name: Build for Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu && cargo build --release --target aarch64-unknown-linux-gnu

      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-gnu && cargo build --release --target aarch64-pc-windows-gnu

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload macOS binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-apple-darwin/release/anew
          asset_name: anew-macos-x86_64

      - name: Upload Linux binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-gnu/release/anew
          asset_name: anew-linux-x86_64

      - name: Upload Windows binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-pc-windows-gnu/release/anew.exe
          asset_name: anew-windows-x86_64.exe

      - name: Upload macOS ARM binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-apple-darwin/release/anew
          asset_name: anew-macos-aarch64

      - name: Upload Linux ARM binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-unknown-linux-gnu/release/anew
          asset_name: anew-linux-aarch64

      - name: Upload Windows ARM binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-pc-windows-gnu/release/anew.exe
          asset_name: anew-windows-aarch64.exe